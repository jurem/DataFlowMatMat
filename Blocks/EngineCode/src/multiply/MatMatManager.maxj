package multiply;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class MatMatManager{

	static final int BLOCK_SIZE = 16;

	public static void main(String[] args) {
		Manager manager = new Manager(new EngineParameters(args));
		Kernel kernel = new MatMatKernel(manager.makeKernelParameters(), BLOCK_SIZE);
		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.createSLiCinterface(interfaceDefault());

		manager.addMaxFileConstant("BLOCK_SIZE", BLOCK_SIZE);
		manager.build();
	}

	private static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();

		int matSize = BLOCK_SIZE * BLOCK_SIZE;
		int matSizeBytes = matSize * CPUTypes.FLOAT.sizeInBytes();

		ei.setStream("matB", CPUTypes.FLOAT, matSizeBytes);
		ei.setStream("matA", CPUTypes.FLOAT, matSizeBytes);
		ei.setStream("matC", CPUTypes.FLOAT, matSizeBytes);

		ei.setTicks("MatMatKernel", matSize);
		return ei;
	}
}
